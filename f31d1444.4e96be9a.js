(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{86:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return i})),t.d(r,"metadata",(function(){return c})),t.d(r,"rightToc",(function(){return s})),t.d(r,"default",(function(){return l}));var o=t(2),n=t(6),a=(t(0),t(92)),i={id:"redux-wiring",title:"rootReducer and rootSaga API",sidebar_label:"Redux Wiring"},c={unversionedId:"api/redux-wiring",id:"api/redux-wiring",isDocsHomePage:!1,title:"rootReducer and rootSaga API",description:"rootReducer(modules, others)",source:"@site/docs/api/redux-wiring.md",permalink:"/docs/api/redux-wiring",editUrl:"https://github.com/saga-slice/saga-slice.github.io/edit/master/website/docs/api/redux-wiring.md",sidebar_label:"Redux Wiring",sidebar:"docs",previous:{title:"createModule API",permalink:"/docs/api/create-module"},next:{title:"Types",permalink:"/docs/api/types"}},s=[{value:"<code>rootReducer(modules, others)</code>",id:"rootreducermodules-others",children:[]},{value:"<code>rootSaga(modules)</code>",id:"rootsagamodules",children:[]}],d={rightToc:s};function l(e){var r=e.components,t=Object(n.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},d,t,{components:r,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"rootreducermodules-others"},Object(a.b)("inlineCode",{parentName:"h2"},"rootReducer(modules, others)")),Object(a.b)("p",null,"Root reducer is a helper that facilitates creating a combined redux store. Under the hood it utilizes redux's ",Object(a.b)("inlineCode",{parentName:"p"},"combineReducers")," function. It also gives us the ability to add other reducers outside of saga-slice into the mix."),Object(a.b)("p",null,"Setting up the root reducer should be pretty straightforward:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"import { createStore, applyMiddleware } from 'redux';\nimport { rootReducer } from 'saga-slice';\n\nimport TodosSlice from './todos/sagaSlice.js';\n\n// And add all of your saga slices into an array.\n// This array can only contain saga-slices.\nconst modules = [\n    TodosSlice\n];\n\n// You can optionally pass other reducers to this root\n// reducer for cases where you have something outside the\n// scope of saga-slice.\nconst appReducer = rootReducer(modules, {\n    myExtraReducer: (state, action) => { /* do stuff */ }\n});\n\nconst store = createStore(appReducer);\n\nexport default store;\n")),Object(a.b)("h2",{id:"rootsagamodules"},Object(a.b)("inlineCode",{parentName:"h2"},"rootSaga(modules)")),Object(a.b)("p",null,"Root saga is a helper that facilitates running all your module's sagas."),Object(a.b)("p",null,"Setting up the root reducer should be pretty straightforward and is the same as what you saw in the ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/getting-started"}),"Getting Started")," page:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootSaga, rootReducer } from 'saga-slice';\n\n// Bring in all of your saga slices together in whatever file\n// you're going to declare your redux store\nimport TodosSlice from './todos/sagaSlice.js';\n\n// And add all of your saga slices into an array\nconst modules = [\n    TodosSlice\n];\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// Typicaly redux middleware\nconst middleware = applyMiddleware(...[\n    sagaMiddleware,\n    /* redux dev tools, etc*/\n])\n\n// Implement root reducer\nconst store = createStore(rootReducer(modules), middleware);\n\n// Implement root saga\nsagaMiddleware.run(rootSaga(modules));\n\nexport default store;\n")))}l.isMDXComponent=!0},92:function(e,r,t){"use strict";t.d(r,"a",(function(){return u})),t.d(r,"b",(function(){return g}));var o=t(0),n=t.n(o);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,o,n=function(e,r){if(null==e)return{};var t,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var d=n.a.createContext({}),l=function(e){var r=n.a.useContext(d),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},u=function(e){var r=l(e.components);return n.a.createElement(d.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.a.createElement(n.a.Fragment,{},r)}},m=n.a.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(t),m=o,g=u["".concat(i,".").concat(m)]||u[m]||p[m]||a;return t?n.a.createElement(g,c(c({ref:r},d),{},{components:t})):n.a.createElement(g,c({ref:r},d))}));function g(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var d=2;d<a;d++)i[d]=t[d];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);